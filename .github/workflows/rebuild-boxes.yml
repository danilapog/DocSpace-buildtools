name: Rebuild DocSpace vagrant boxes

run-name: "Rebuild DocSpace vagrant boxes version: ${{ github.event.inputs.box-version }}"

on:
  workflow_dispatch:
    inputs:
      box-version:
         type: string
         description: 'DocSpace version that will be installed inside box'
         required: true

jobs:
  rebuild-boxes:
    name: "Rebuild ${{ matrix.name}} ${{ github.event.inputs.box-version }}"
    runs-on: ubuntu-22.04
    env:
      HCP_CLIENT_ID: ${{ secrets.HCP_CLIENT_ID }}
      HCP_CLIENT_SECRET: ${{ secrets.HCP_CLIENT_SECRET }}
      BOX_VERSION: ${{ github.event.inputs.box-version }}
      VAGRANT_ORG: danilapog
      PRODUCT: docspace
      OS_NAME: ${{ matrix.name }}
      OS: ${{ matrix.os }}
      DISTR: ${{ matrix.distr }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - distr: onlyoffice
            os: base-rhel9
            name: "rhel9"


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
        
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
        
      - name: 'Download hcp CLI'
        uses: 'hashicorp/hcp-setup-action@v0'
        with:
          version: 'latest'

      - name: Add Oracle VirtualBox APT repo (jammy)
        run: |
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://www.virtualbox.org/download/oracle_vbox_2016.asc \
            | sudo tee /etc/apt/keyrings/oracle-virtualbox.asc >/dev/null
          sudo chmod 0644 /etc/apt/keyrings/oracle-virtualbox.asc
          sudo tee /etc/apt/sources.list.d/virtualbox.sources >/dev/null <<'EOF'
          Types: deb
          URIs: https://download.virtualbox.org/virtualbox/debian
          Suites: jammy
          Components: contrib
          Signed-By: /etc/apt/keyrings/oracle-virtualbox.asc
          EOF
          sudo wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          sudo echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(grep -oP '(?<=UBUNTU_CODENAME=).*' /etc/os-release || lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update
          sudo apt install vagrant

      - name: Install VirtualBox 7.1
        run: |
          sudo apt-get install -y --no-install-recommends \
          build-essential dkms linux-headers-$(uname -r) virtualbox-7.1
      
      - name: Rebuild boxes
        uses: nick-fields/retry@v3
        with:
          max_attempts: 1
          timeout_minutes: 90
          retry_on: error
          command: |
                  set -eux   
                  cd tests/vagrant
                  export date=$(date +%F)
                    TEST_CASE='--local-install' \
                    DISTR='${{ matrix.distr }}' \
                    OS='${{matrix.os}}' \
                    RAM='8192' \
                    CPU='3' \
                    DOWNLOAD_SCRIPT='-ds false' \
                    TEST_REPO='-tr true' \
                    ARGUMENTS="-arg '--skiphardwarecheck true --localscripts true'" \
                    vagrant up --provider=virtualbox
                  vagrant ssh -c "sudo shutdown -h now"
                  sleep 300
                  vagrant package --output ${OS_NAME}.box
                  vagrant cloud publish \
                     ${VAGRANT_ORG}/${PRODUCT}-${OS_NAME} \
                     ${BOX_VERSION} virtualbox ${OS_NAME}.box \
                     -d "Box with pre-installed ${PRODUCT}" \
                     --version-description "${PRODUCT}:${BOX_VERSION}" \
                     --release --short-description "Boxes for update testing" \
                     --force \
                     --no-private
          on_retry_command: |
                set -eux

                echo "RUN CLEAN UP: Remove repacked box and destroy"
                cd tests/vagrant
                rm -rf ${PRODUCT}-${OS_NAME}.box
                vagrant destroy --force

